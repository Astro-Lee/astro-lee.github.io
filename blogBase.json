{"singlePage": ["about", "link"], "startSite": "04/20/2024", "filingNum": "", "onePageListNum": 10, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "Blog Title", "subTitle": "Blog description", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "email": "liruizhi0871@gmail.com", "postListJson": {"P1": {"htmlDir": "docs/post/Build deb package.html", "labels": ["documentation", "Linux"], "postTitle": "Build deb package", "postUrl": "post/Build%20deb%20package.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/1", "commentNum": 0, "wordCount": 2576, "description": "\u672c\u6587\u4ecb\u7ecd deb \u7684\u6784\u5efa\u65b9\u5f0f\r\n\r\n# \u524d\u671f\u51c6\u5907\r\n## \u521b\u5efaGPG\u516c\u94a5\u548c\u79c1\u94a5\r\n```bash\r\ngpg --full-generate-key --expert\r\n# \u8bb0\u4f4f\u79c1\u94a5\u7684\u5bc6\u7801\r\n```\r\n![image](https://github.com/Astro-Lee/astro-lee.github.io/assets/61745903/a9ba85af-5f40-41c8-b814-a96de04927aa)\r\n\r\n```bash\r\ngpg --armor --export GPG\u5bc6\u94a5ID\r\n```\r\n\u590d\u5236\u4ee5 `-----BEGIN PGP PUBLIC KEY BLOCK-----` \u5f00\u5934\u5e76\u4ee5 `-----END PGP PUBLIC KEY BLOCK-----` \u7ed3\u5c3e\u7684 GPG \u5bc6\u94a5\u3002", "top": 0, "createdAt": 1713596568, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-04-20", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/GCN template.html", "labels": ["template"], "postTitle": "GCN template", "postUrl": "post/GCN%20template.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/2", "commentNum": 0, "wordCount": 2111, "description": "# GRB 240411B: GMG optical observation\r\n\r\n```\r\nR.-Z. Li, B.-T. Wang, J. Mao,       and J.-M. Bai (YNAO, CAS) report:\r\n\r\nWe observed the field of GRB 240411B (Li et al., GCN 36063, T0 at 15:32:54 UT) using the GMG-2.4m telescope at the Lijiang Observatory. The observation began at 2024-04-11T21:55:31, approximately 6.4 hours after the trigger.\r\n\r\nThe optical counterpart of GRB 240411B, not visible in the Pan-STARRS1 r-band image, was (marginally/clearly) detected at the coordinates (J2000):\r\nRA  = 15h 26m 10.15s\r\nDEC = -02d 08' 47.0'\r\n, with a positional uncertainty of 0.5' or better.\r\n\r\nThe preliminary analysis results are shown as follows:\r\n--------------------------------------------------\r\nTmid-T0 [s]\tfilter\tmag\t\t5-sigma UL\r\n--------------------------------------------------\r\n23257 \u00b1 300\tR\t21.16 \u00b1 0.15\t22.64\r\n--------------------------------------------------\r\nThe given magnitudes are derived based on calibration against Pan-STARRS1 field stars and are not corrected for the expected Galactic foreground extinction, corresponding to a reddening of E(B-V) = 0.138 mag in the direction of the optical counterpart (Schlafly & Finkbeiner 2011).\r\n\r\nWe acknowledge the staff at the Lijiang Observatory for conducting the observation.\r\n```\r\n\r\n# GRB 240411B: GMG optical upper limit\r\n```\r\nR.-Z. Li, B.-T. Wang, J. Mao,       and J.-M. Bai (YNAO, CAS) report:\r\n\r\nWe observed the field of GRB 240411B (Li et al., GCN 36063, T0 at 15:32:54 UT) using the GMG-2.4m telescope at the Lijiang Observatory. The observation began at 2024-04-11T21:55:31, approximately 6.4 hours after the trigger.\r\n\r\nNo any optical counterpart of GRB 240411B was detected within the XRT/EP-WXT/EP-FXT/VT error circle (GCN XXX).\r\n\r\nThe preliminary analysis results are shown as follows:\r\n----------------------------------\r\nTmid-T0 [s]\tfilter\t5-sigma UL\r\n----------------------------------\r\n23257 \u00b1 300\tR\t22.64\r\n----------------------------------\r\nThe given magnitudes are derived based on calibrating against Pan-STARRS1 field stars.\r\n\r\nWe acknowledge the staff at the Lijiang Observatory for conducting the observation.\r\n```\r\n\r\n\u3002", "top": 1, "createdAt": 1713629128, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-04-21", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/Convert K-S test probabilities to Gaussian sigma.html", "labels": ["documentation"], "postTitle": "Convert K-S test probabilities to Gaussian sigma", "postUrl": "post/Convert%20K-S%20test%20probabilities%20to%20Gaussian%20sigma.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/3", "commentNum": 2, "wordCount": 770, "description": "Kolmogorov-Smirnov\uff08K-S\uff09\u68c0\u9a8c\u662f\u4e00\u79cd\u975e\u53c2\u6570\u68c0\u9a8c\uff0c\u7528\u4e8e\u6bd4\u8f83\u6837\u672c\u4e0e\u53c2\u8003\u6982\u7387\u5206\u5e03\uff08\u5355\u6837\u672cK-S\u68c0\u9a8c\uff09\u6216\u6bd4\u8f83\u4e24\u4e2a\u6837\u672c\uff08\u53cc\u6837\u672cK-S\u68c0\u9a8c\uff09\u3002", "top": 0, "createdAt": 1717664998, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-06-06", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/Error Propagation in the Ratio NH-E(B \u2212 V).html", "labels": ["documentation"], "postTitle": "Error Propagation in the Ratio NH/E(B \u2212 V)", "postUrl": "post/Error%20Propagation%20in%20the%20Ratio%20NH-E%28B%20%E2%88%92%20V%29.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/4", "commentNum": 0, "wordCount": 727, "description": "# [Variations of Interstellar Gas-to-dust Ratios at High Galactic Latitudes](https://ui.adsabs.harvard.edu/abs/2024ApJ...961..204S/abstract)\r\n<img width='720' alt='image' src='https://github.com/user-attachments/assets/edd7cdf4-4180-4c9b-b9aa-104069063b67'>\r\n<img width='715' alt='image' src='https://github.com/user-attachments/assets/3af31128-61c4-4053-b2bf-23e5527eed24'>\r\n<img width='720' alt='image' src='https://github.com/user-attachments/assets/7cdcf527-b89e-45cc-8d65-87ddad1d9be8'>\r\n<img width='720' alt='image' src='https://github.com/user-attachments/assets/7ff3d1e4-800f-45ab-b180-351a1c1352df'>\r\n<img width='720' alt='image' src='https://github.com/user-attachments/assets/730c1c82-4872-43f3-964f-127072252d33'>\r\n\u3002", "top": 0, "createdAt": 1721401865, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-07-19", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/Link.html", "labels": ["documentation"], "postTitle": "Link", "postUrl": "post/Link.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/5", "commentNum": 0, "wordCount": 574, "description": "- [A web interface dealing with stellar isochrones and their derivatives (CMD)](http://stev.oapd.inaf.it/cgi-bin/cmd)\n- [Demonstrations of MCMC and Nested Samplers in Physics](https://mo-ghani.github.io/Sampling/)\n- [THE ONLINE MCMC](https://www.theonlinemcmc.com/)\n- [Definition of TIME in NICER Data Files](https://heasarc.gsfc.nasa.gov/docs/nicer/analysis_threads/time/)\n- [\u5b9a\u6295\u8ba1\u7b97\u5668](https://danjuanfunds.com/calculator/danjuan)\n- [Efficient Frontier in Python \u2013 Detailed Tutorial](https://towardsdatascience.com/efficient-frontier-in-python-detailed-tutorial-84a304f03e79/)\u3002", "top": 0, "createdAt": 1729043123, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-10-16", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/hc = 12.39842 Angstrom keV.html", "labels": ["documentation"], "postTitle": "hc = 12.39842 Angstrom keV", "postUrl": "post/hc%20%3D%2012.39842%20Angstrom%20keV.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/6", "commentNum": 0, "wordCount": 470, "description": "```python\nfrom astropy.constants import h, c\nfrom astropy import units as u\n\n# Calculate hc in keV*\u00c5\nhc = (h * c).to(u.keV * u.angstrom)\nprint(hc)\n```\n\n`hc = 12.398419739640715 Angstrom keV`\n\n---\n\n```python\nfrom astropy import units as u\n(1 * u.erg / u.cm**2 / u.s).to(u.mJy, equivalencies=u.spectral_density(1. * u.keV))\n```\n`1 erg/cm^2/s = 413566769.6923858 mJy @ 1 keV` \n\n1. \u5ffd\u7565\u4e86\u5149\u8c31\u5f62\u72b6\uff08\u5982\u8c31\u6307\u6570\uff09\n2. \u4e0d\u8003\u8651\u5e26\u5bbd\uff08\u80fd\u91cf\u6bb5\uff09\uff0c\u662f\u4e00\u4e2a\u70b9\u72b6\u8f6c\u6362\n3. \u662f\u4e00\u79cd\u201c\u7b49\u4ef7\u7684\u70b9\u503c\u8f6c\u6362\u201d\u800c\u4e0d\u662f\u201c\u79ef\u5206\u8f6c\u6362\u201d\n4. \u53ea\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u80fd\u91cf\uff08\u6216\u9891\u7387\uff09\u70b9\uff0c\u4e0d\u9700\u8981\u8c31\u6307\u6570\u6216\u80fd\u91cf\u6bb5\u5bbd\u5ea6\u3002", "top": 0, "createdAt": 1735199484, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-26", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/matplotlib figsize.html", "labels": ["documentation"], "postTitle": "matplotlib figsize", "postUrl": "post/matplotlib%20figsize.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/7", "commentNum": 0, "wordCount": 563, "description": "```python\r\nimport matplotlib.pyplot as plt\r\n\r\n# \u5c06\u5bbd\u5ea6\u4ece pt \u8f6c\u6362\u4e3a\u82f1\u5bf8 (1 pt = 1/72 inch)\r\nwidth_pt = 242.26653 # one column 242.26653pt\r\n#width_pt = 513.11743 # two column 513.11743pt\r\n\r\nwidth_in = width_pt / 72.27  # Matplotlib \u4f7f\u7528 TeX \u7684 pt \u6807\u51c6 (72.27 pt = 1 inch)\r\n\r\n# \u9ec4\u91d1\u5206\u5272\u6bd4\r\ngolden_ratio = (1 + 5 ** 0.5) / 2\r\n\r\n# \u8ba1\u7b97\u9ad8\u5ea6\r\nheight_in = width_in / golden_ratio\r\n\r\n# \u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\r\nfig, ax = plt.subplots(figsize=(width_in, height_in))\r\n\r\n# \u793a\u4f8b\u7ed8\u56fe\r\nax.plot([1, 2, 3], [1, 4, 9])\r\nax.set_title('Example Plot')\r\nax.set_xlabel('X-axis')\r\nax.set_ylabel('Y-axis')\r\n\r\n# \u663e\u793a\u56fe\u50cf\r\nplt.show()\r\n```\u3002", "top": 0, "createdAt": 1736847995, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-01-14", "dateLabelColor": "#0969da"}, "P8": {"htmlDir": "docs/post/gfortran.html", "labels": ["documentation"], "postTitle": "gfortran", "postUrl": "post/gfortran.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/8", "commentNum": 0, "wordCount": 511, "description": "```\nenv -i HOME=$HOME PATH=/opt/homebrew/bin:/usr/bin:/bin:/usr/sbin:/sbin \\\nTERM=$TERM SHELL=/bin/bash \\\nDYLD_LIBRARY_PATH=/opt/homebrew/lib \\\nbash --noprofile --norc\n```\n\n```\nwhich gfortran\n# \u2192 \u5e94\u8be5\u662f /opt/homebrew/bin/gfortran\n\ngfortran --version\n# \u2192 \u5e94\u8be5\u662f Homebrew gcc \u7248\u672c\n\notool -L /opt/homebrew/bin/gfortran | grep fortran\n# \u2192 \u5e94\u8be5\u53ea\u770b\u5230 /opt/homebrew/lib\uff0c\u4e0d\u80fd\u6709 mambaforge\n```\n\n```\ncd ~/Downloads/MultiNest\nrm -rf build\nmkdir build && cd build\n\ncmake .. -DCMAKE_Fortran_COMPILER=/opt/homebrew/bin/gfortran\nmake -j4\n```\u3002", "top": 0, "createdAt": 1750952241, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-06-26", "dateLabelColor": "#0969da"}, "P9": {"htmlDir": "docs/post/statistically consistent.html", "labels": ["documentation"], "postTitle": "statistically consistent", "postUrl": "post/statistically%20consistent.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/9", "commentNum": 0, "wordCount": 3015, "description": "\u8981\u9a8c\u8bc1\u4e24\u4e2a\u53d8\u91cf $\\alpha_\\mathrm{obs,X} = 1.286 \\pm 0.030$ \u548c $\\alpha_\\mathrm{obs,O} = 1.340 \\pm 0.002$ \u662f\u5426\u4e00\u81f4\uff0c\u6211\u4eec\u9700\u8981\u68c0\u67e5\u5b83\u4eec\u7684\u6d4b\u91cf\u503c\u5728\u8003\u8651\u5230\u4e0d\u786e\u5b9a\u5ea6\u7684\u60c5\u51b5\u4e0b\u662f\u5426\u517c\u5bb9\u3002", "top": 0, "createdAt": 1753756851, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-07-29", "dateLabelColor": "#0969da"}, "P10": {"htmlDir": "docs/post/multiply smoothly broken power-law Function.html", "labels": ["documentation"], "postTitle": "multiply smoothly broken power-law Function", "postUrl": "post/multiply%20smoothly%20broken%20power-law%20Function.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/10", "commentNum": 0, "wordCount": 1816, "description": "$f(x) = 10^{c}\\cdot x^{-\\alpha_1}\\cdot\\prod_{i=1}^{n-1}\\left[1+\\left(\\frac{x}{x_{bi}}\\right)^{1/\\delta_i}\\right]^{-\\delta_i(\\alpha_{i+1}-\\alpha_i)}$\n\n\u5176\u4e2d\uff1a\n- $c$: \u5f52\u4e00\u5316\u5e42\u6307\u6570\u3002", "top": 0, "createdAt": 1754298313, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-08-04", "dateLabelColor": "#0969da"}, "P11": {"htmlDir": "docs/post/bilby.html", "labels": ["documentation", "template"], "postTitle": "bilby", "postUrl": "post/bilby.html", "postSourceUrl": "https://github.com/Astro-Lee/astro-lee.github.io/issues/11", "commentNum": 0, "wordCount": 6880, "description": "bilby + PyMultiNest + MultiNest\n\n```python\ndef multi_sbpl(x, c, breakpoints, alphas, deltas):\n    '''\n    \u591a\u6bb5\u5e73\u6ed1\u7834\u5e42\u5f8b\u51fd\u6570\uff0c\u5e42\u5f8b\u6307\u6570\u4e3a\u8d1f\u503c\u5f62\u5f0f (-alpha_i)\n    \u53c2\u6570:\n        x: \u81ea\u53d8\u91cf (array-like)\n        c: \u5f52\u4e00\u5316\u5e42\u6307\u6570\n        breakpoints: \u62d0\u70b9\u5217\u8868 [xb1, xb2, ..., xb(n-1)]\n        alphas: \u6b63\u7684\u5e42\u5f8b\u6307\u6570\u7edd\u5bf9\u503c\u5217\u8868 [alpha1, alpha2, ..., alphan]\n        deltas: \u5e73\u6ed1\u53c2\u6570\u5217\u8868 [delta1, delta2, ..., delta(n-1)]\n    \u8fd4\u56de:\n        f(x): SBPL \u51fd\u6570\u503c\n    '''\n    # \u521d\u59cb\u5e42\u5f8b\u6307\u6570\u4e3a -alpha1\n    result = 10**c * x**(-alphas[0])\n    # \u8ba1\u7b97\u6bcf\u4e2a\u62d0\u70b9\u7684\u5e73\u6ed1\u8fc7\u6e21\n    for i in range(len(breakpoints)):\n        term = 1 + (x / breakpoints[i])**(1 / deltas[i])\n        # \u6307\u6570\u5dee\u4e3a -alpha_(i+1) - (-alpha_i) = alpha_i - alpha_(i+1)\n        result *= term**(-deltas[i] * (alphas[i + 1] - alphas[i]))\n    return result\n```\n\n```python\nimport pandas as pd\n\nbilby_data = pd.read_csv('https://gitee.com/Astro-Lee/storage/raw/master/bilby_data.csv')\nx_time = bilby_data['x_time']\nx_flux = bilby_data['x_flux']\nx_flux_err = bilby_data['x_flux_err']\n```\n\n```python\nimport os\n# \u8bbe\u7f6e DYLD_LIBRARY_PATH\uff08\u9002\u7528\u4e8e macOS\uff09\nmultinest_lib_path = os.path.expanduser('~/Downloads/MultiNest/lib')\nos.environ['DYLD_LIBRARY_PATH'] = multinest_lib_path + ':' + os.environ.get('DYLD_LIBRARY_PATH', '')\n# \uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09\u663e\u793a\u8bbe\u7f6e\u662f\u5426\u6210\u529f\nprint('DYLD_LIBRARY_PATH =', os.environ['DYLD_LIBRARY_PATH'])\n# \u6216\u8005cp -v ~/Downloads/MultiNest/lib/lib* /anaconda3/lib/\n```\n\n```python\n#!/usr/bin/env python\n'''\nAn example of how to use bilby to perform parameter estimation for\nnon-gravitational wave data consisting of a Gaussian with a mean and variance\n'''\nimport bilby\nimport numpy as np\nfrom bilby.core.utils.random import rng, seed\n\n# Sets seed of bilby's generator 'rng' to '123' to ensure reproducibility\nseed(1234)\n\n# Here is minimum requirement for a Likelihood class to run with bilby. In this\n# case, we setup a GaussianLikelihood, which needs to have a log_likelihood\n# method. Note, in this case we will NOT make use of the `bilby`\n# waveform_generator to make the signal.\n\nclass SimpleGaussianLikelihood(bilby.Likelihood):\n    def __init__(self, x, y, yerr):\n        '''\n        A very simple Gaussian likelihood\n\n        Parameters\n        ----------\n        data: array_like\n            The data to analyse\n        '''\n        super().__init__(parameters=dict())\n        self.x = x\n        self.y = y\n        self.yerr = yerr\n\n    def log_likelihood(self):\n        c = self.parameters['c']  \n        breakpoint1 = self.parameters['breakpoint1']\n        breakpoint2 = self.parameters['breakpoint2']\n        alpha1 = self.parameters['alpha1']\n        alpha2 = self.parameters['alpha2']\n        alpha3 = self.parameters['alpha3']\n        log_f = self.parameters['log_f']     \n\n        model = multi_sbpl(self.x, c, \n            breakpoints=[breakpoint1,breakpoint2], \n            alphas=[alpha1,alpha2,alpha3], \n            deltas=[0.1,0.1])\n\n        res = self.y - model\n        sigma2 = self.yerr**2 + model**2 * np.exp(2 * log_f)\n        \n        loglike = -0.5 * np.sum(res**2 / sigma2 + np.log(2 * np.pi * sigma2))\n\n        return loglike\n\nlikelihood = SimpleGaussianLikelihood(x_time, x_flux, x_flux_err)\n\npriors = dict(\n    c = bilby.core.prior.Uniform(-4, -3, 'k',r'$c$'),\n    breakpoint1 = bilby.core.prior.Uniform(200, 500, 'breakpoint1',r'$breakpoint1$'),\n    breakpoint2 = bilby.core.prior.Uniform(500,10000, 'breakpoint2',r'$breakpoint2$'),\n    alpha1 = bilby.core.prior.Uniform(-1, 1, 'alpha1',r'$alpha1$'),\n    alpha2 = bilby.core.prior.Uniform(1, 2, 'alpha2', r'$alpha2$'),\n    alpha3 = bilby.core.prior.Uniform(1, 2, 'alpha3', r'$alpha3$'),\n    log_f = bilby.core.prior.Uniform(-10., 1., 'log_f', r'$\\log f_\\mathrm{sys}$'),\n)\n```\n\n```python\n# A few simple setup steps\nlabel = '10keV-2broken'\noutdir = 'outdir'\n\n# And run sampler\nresult = bilby.run_sampler(\n    likelihood=likelihood,\n    priors=priors,\n    outdir=outdir,\n    label=label,\n    sampler='pymultinest',\n    importance_nested_sampling=True,\n    verbose=False,\n    nlive=2000,\n    resume=True,\n    clean=False,\n)\n```\n\n```python\nresult.plot_corner(save=True, filename='corner.pdf',\nshow_titles=True, quantiles=[0.16, 0.5, 0.84], \nlabels=[prior_dist.latex_label for key, prior_dist in priors.items()]\n)\n```\n\n<img width='1578' height='1600' alt='Image' src='https://github.com/user-attachments/assets/ed77ce4b-7ed3-4d2c-9b49-35d36ee72ccb' />\n\n```python\nprint(label)\nprint(f'log Z = {result.log_evidence} \u00b1 {result.log_evidence_err}\\n')\n\nquantile_tab = result.posterior.quantile([0.16, 0.5, 0.84])\n# \u904d\u5386\u6240\u6709\u5217\uff0c\u6253\u5370\u4e2d\u4f4d\u6570\u548c\u4e0a\u4e0b\u8bef\u5dee\nfor col in quantile_tab.columns[:-2]:\n    q16 = quantile_tab.loc[0.16, col]\n    q50 = quantile_tab.loc[0.50, col]\n    q84 = quantile_tab.loc[0.84, col]\n\n    err_low = q50 - q16\n    err_high = q84 - q50\n\n    print(f'{col} = {q50:.6f} (+{err_high:.6f}/-{err_low:.6f})')\n```\n\n\u8f93\u51fa\u7ed3\u679c\n```bash\n# 10keV-2broken\n# log Z = 12270.607387903234 \u00b1 0.09746941609724716\n\n# c = -3.661216 (+0.147197/-0.145641)\n# breakpoint1 = 272.599363 (+12.038642/-11.232960)\n# breakpoint2 = 1325.521828 (+424.605908/-306.887697)\n# alpha1 = -0.033724 (+0.066284/-0.066135)\n# alpha2 = 1.273952 (+0.029515/-0.033641)\n# alpha3 = 1.550395 (+0.028099/-0.022251)\n# log_f = -1.433169 (+0.029608/-0.029620)\n\n# 10keV-1broken\n# log Z = 12250.889339996882 \u00b1 0.08563383228929447\n\n# c = -3.359253 (+0.130664/-0.124555)\n# breakpoint1 = 333.251729 (+11.848272/-10.852528)\n# alpha1 = 0.107049 (+0.057266/-0.054615)\n# alpha2 = 1.471793 (+0.011757/-0.011525)\n# log_f = -1.400355 (+0.028854/-0.029786)\n```\n\u8ba1\u7b97\u5bf9\u6570\u8d1d\u53f6\u65af\u56e0\u5b50\uff08ln Bayes Factor\uff09\n$\\ln B = \\log Z_{\\text{2break}} - \\log Z_{\\text{1break}} \\approx 20$\n\n\u6839\u636e Jeffreys scale \u5224\u65ad\n| ln(Bayes Factor)      | \u5f3a\u5ea6\u89e3\u91ca\uff08Jeffreys scale)          |\n| :------------------: | :-----------------------------: |\n| 0\u20131                            | \u4e0d\u53ef\u533a\u5206 (Inconclusive)              |\n| 1\u20132.5                         | \u5f31\u8bc1\u636e (Weak evidence)             |\n| 2.5\u20135                        | \u4e2d\u7b49\u8bc1\u636e (Moderate evidence)   |\n| >5                             | \u5f3a\u6709\u529b\u652f\u6301 (Strong evidence)     |\n\n**Bayes \u56e0\u5b50 $\\ln B \\approx 20$ \u8868\u660e\u5f3a\u6709\u529b\u7684\u7edf\u8ba1\u8bc1\u636e\u652f\u6301\u4f7f\u7528 2 \u4e2a\u65ad\u70b9\u7684\u6a21\u578b\u3002", "top": 1, "createdAt": 1754470379, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2025-08-06", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "Linux": "#8FD063", "question": "#d876e3", "template": "#169B8B", "wontfix": "#ffffff"}, "displayTitle": "Blog Title", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://astro-lee.github.io", "prevUrl": "/index.html", "nextUrl": "disabled"}